:root {
    --badge-bg-default:         var(--gray-light);
    --badge-txt-default:        var(--color-text);
    --badge-remove-bg:          var(--gray-lighter);
    --badge-icon-color:         var(--gray-dark);

    --badge-bg-darker:          var(--gray-mid);
    --badge-txt-darker:         var(--color-text);

    --badge-bg-highlight1:      var(--main-blue);
    --badge-txt-highlight1:     var(--color-background);

    --badge-bg-highlight2:      var(--mid-blue-light);
    --badge-txt-highlight2:     var(--color-background);

    //------------------

    --tag-label-bg-default:         hsla(0, 0%, 30%, 0.18);
    --tag-label-txt-default:        var(--color-text);
    --tag-label-remove-bg:          var(--gray-lighter);
    --tag-label-icon-color:         hsl(0, 0%, 40%);

    --tag-label-bg-darker:          hsla(0, 0%, 30%, 0.32);
    --tag-label-txt-darker:         var(--color-text);

    --tag-label-bg-inverse:         hsl(0, 3%, 36%);
    --tag-label-txt-inverse:        hsl(0, 0%, 100%);

    --tag-label-bg-highlight1:      var(--main-blue);
    --tag-label-txt-highlight1:     var(--color-background);

    --tag-label-bg-highlight2:      var(--mid-blue-light);
    --tag-label-txt-highlight2:     var(--color-background);
}

$tag-bg-colors: (
    default:        var(--tag-label-bg-default),
    darker:         var(--tag-label-bg-darker),
    inverse:        var(--tag-label-bg-inverse),
    warning:        alpha(var(--color-warning), 0.25),
    alert:          alpha(var(--color-alert), 0.25),
    success:        alpha(var(--color-success), 0.25),
    info:           alpha(var(--color-info), 0.25),
    highlight:      var(--color-highlight),
    highlight1:     alpha(var(--color-highlight1), 0.25),
    highlight2:     alpha(var(--color-highlight2), 0.25),
);
$tag-text-colors: (
    default:        var(--tag-label-txt-default),
    darker:         var(--tag-label-txt-darker),
    inverse:        var(--tag-label-txt-inverse),

    warning:        lightness(var(--color-warning), 0.65),
    alert:          lightness(var(--color-alert), 0.65),
    success:        lightness(var(--color-success), 0.65),
    info:           lightness(var(--color-info), 0.65),
    highlight:      var(--tag-label-txt-inverse),

    highlight1:     lightness(var(--color-highlight1), 0.65),
    highlight2:     lightness(var(--color-highlight2), 0.65),
);
$tag-x-colors: (
    default:        var(--tag-label-icon-color),
    darker:         var(--tag-label-icon-color),
    inverse:        hsla(0, 0%, 100%, 0.75),

    warning:        var(--color-warning),
    alert:          var(--color-alert),
    success:        var(--color-success),
    info:           var(--color-info),
    highlight:      hsla(0, 0%, 100%, 0.75),

    highlight1:     var(--color-highlight1),
    highlight2:     var(--color-highlight2),
);

/// Coloring classes. A map of classes to output in the CSS.
$tag-bg-palette: $tag-bg-colors !default;
$tag-text-palette: $tag-text-colors !default;
$tag-x-palette: $tag-x-colors !default;


/// Generates the base styles for a badge.
@mixin tag-label {
    display: inline-flex;
    align-items: center;
    min-width: 1.8em;
    padding: 0;
    padding-inline: 12px;
    border-radius: 4px;
    font-size: 0.875rem;
    position: relative;
    text-align: center;
    font-weight: 400;
    transition: background-color .2s ease-out, opacity .1s ease-out;
    margin: 0;
    height: 32px;
    color: var(--tag-label-txt-default);
    background-color: var(--tag-label-bg-default);
}

.tag-label {
    @include tag-label;

    @each $name, $color in $tag-bg-palette {
        &.tag-label--#{$name} {
            background-color: $color;
        }
    }
    @each $name, $color in $tag-text-palette {
        &.tag-label--#{$name} {
            color: $color;
        }
    }
    @each $name, $color in $tag-x-palette {
        &.tag-label--#{$name} {
            .tag-label__remove {
                [class^="icon-"], [class*=" icon-"] {
                    color: $color;
                }
            }
        }
    }
    .tag-label__remove {
        height: 32px;
        width: 32px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: inherit;
        line-height: 1;
        text-decoration: none;
        text-align: center;
        vertical-align: middle;
        border-radius: 4px;
        border: 0;
        background-color: var(--badge-remove-bg);
        opacity: 0.65;
        cursor: pointer;
        transition: background-color .2s ease-out, color .1s ease-out, opacity .1s ease-out;
        margin-inline-start: 0.5rem;
        margin-inline-end: -0.625rem;
        [class^="icon-"], [class*=" icon-"] {
            color: var(--tag-label-icon-color);
            font-size: 24px;
            flex-grow: 0;
            flex-shrink: 0;
            margin-inline-start: 1px;
            opacity: 0.6;
            transition: color .1s ease-out, opacity .1s ease-out;
        }
        &:hover {
            text-decoration: none;
            opacity: 0.85;
            [class^="icon-"], [class*=" icon-"] {
                opacity: 0.85;
            }
        }
        &:active {
            opacity: 1;
            [class^="icon-"], [class*=" icon-"] {
                opacity: 1;
            }
        }
        &:focus {
            outline: none;
        }
    }
    .tag-label--text-wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 4px;
    }
    .tag-label--text {
        font-weight: 700;
    }
    .tag-label--text-label {
        opacity: 0.9;
    }
    &.tag-label--operator {
        font-size: 12px;
        font-weight: 700;
        letter-spacing: 0.04em;
        text-transform: uppercase;
        padding-inline: var(--space--1);
    }
}
.tags-list {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 8px;
}

